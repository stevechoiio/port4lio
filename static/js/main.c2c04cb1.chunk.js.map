{"version":3,"sources":["components/Header.js","components/Resume.js","components/Portfolio.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","react_default","a","createElement","Fragment","id","className","href","title","style","fontFamily","name","color","role","roleDescription","socialLinks","map","item","key","url","target","Component","Resume","work","CompanyName","specialization","MonthOfLeaving","YearOfLeaving","Achievements","education","UniversityURL","UniversityName","MonthOfPassing","YearOfPassing","Porfolio","portfolio","index","mixBlendMode","src","concat","imgurl","description","Footer","imagebaseurl","linkedinId","skypeid","aboutme","address","website","skillsDescription","skills","skillname","testimonials","App","Header_Header","Portfolio_Porfolio","Resume_Resume","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2c04cb1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n        <header id=\"home\">\n          <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n              Show navigation\n            </a>\n            <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">\n              Hide navigation\n            </a>\n            <ul id=\"nav\" className=\"nav\">\n              <li className=\"current\">\n                <a className=\"smoothscroll\" href=\"#home\">\n                  Home\n                </a>\n              </li>\n\n              <li>\n                <a className=\"smoothscroll\" href=\"#portfolio\">\n                  Works\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#resume\">\n                  Resume\n                </a>\n              </li>\n            </ul>\n          </nav>\n\n          <div className=\"row banner\">\n            <div className=\"banner-text\">\n              <h1\n                style={{ fontFamily: \"Julius Sans One\" }}\n                className=\"responsive-headline\"\n              >\n                {resumeData.name}\n              </h1>\n              <h3 style={{ color: \"#fff\", fontFamily: \"sans-serif \" }}>\n                I am a {resumeData.role}.{resumeData.roleDescription}\n              </h3>\n              <hr />\n              <ul className=\"social\">\n                {resumeData.socialLinks &&\n                  resumeData.socialLinks.map(item => {\n                    return (\n                      <li key={item.name}>\n                        <a href={item.url} target=\"_blank\">\n                          <i className={item.className} />\n                        </a>\n                      </li>\n                    );\n                  })}\n              </ul>\n            </div>\n          </div>\n\n          <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#portfolio\">\n              <i className=\"icon-down-circle\" />\n            </a>\n          </p>\n        </header>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nexport default class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n        \n        <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Work</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {resumeData.work &&\n              resumeData.work.map(item => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                    \n                        <a href={item.url}>\n                          <h3>{item.CompanyName}</h3>\n                        </a>\n    \n\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span>{\" \"}\n                        <em className=\"date\">\n                          {item.MonthOfLeaving} {item.YearOfLeaving}\n                        </em>\n                      </p>\n                      <p>{item.Achievements}</p>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n        <div className=\"row education\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Education</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {resumeData.education &&\n              resumeData.education.map(item => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <a href={item.UniversityURL}>\n                        <h3>{item.UniversityName}</h3>\n                      </a>\n\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span>{\" \"}\n                        <em className=\"date\">\n                          {item.MonthOfPassing} {item.YearOfPassing}\n                        </em>\n                      </p>\n                      <p>{item.Achievements}</p>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n        {/* <div className=\"row skill\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Skills</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            <p>{resumeData.skillsDescription}</p>\n\n            <div className=\"bars\">\n              <ul className=\"skills\">\n                {resumeData.skills &&\n                  resumeData.skills.map(item => {\n                    return (\n                      <li>\n                        <span\n                          className={`bar-expand ${item.skillname.toLowerCase()}`}\n                        />\n                        <em>{item.skillname}</em>\n                      </li>\n                    );\n                  })}\n              </ul>\n            </div>\n          </div>\n        </div> */}\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n        <div className=\"row\">\n          <div className=\"twelve columns collapsed\">\n            <h1>Check Out Some of My Recent Works.</h1>\n\n            <div\n              id=\"portfolio-wrapper\"\n              className=\"bgrid-quarters s-bgrid-thirds cf\"\n            >\n              {resumeData.portfolio &&\n                resumeData.portfolio.map((item, index) => {\n                  return (\n                    <div>\n                      <div\n                        style={{ mixBlendMode: \"multiply\" }}\n                        className=\"columns portfolio-item\"\n                      >\n                        <div className=\"item-wrap\">\n                          <a id={index}>\n                            <img src={`${item.imgurl}`} className=\"item-img\" />\n                            <div className=\"overlay\">\n                              <div className=\"portfolio-item-meta\">\n                                <h5>{item.name}</h5>\n                                <p>{item.description}</p>\n                              </div>\n                            </div>\n                          </a>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n        <div className=\"row\">\n          <div className=\"twelve columns\">\n            <ul className=\"social-links\">\n              {resumeData.socialLinks &&\n                resumeData.socialLinks.map(item => {\n                  return (\n                    <li>\n                      <a href={item.url}>\n                        <i className={item.className} />\n                      </a>\n                    </li>\n                  );\n                })}\n            </ul>\n          </div>\n          <div id=\"go-top\">\n            <a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\">\n              <i className=\"icon-up-open\" />\n            </a>\n          </div>\n        </div>\n        <p>© 2019 Steve Choi. All rights reserved.</p>\n      </footer>\n    );\n  }\n}\n","let resumeData = {\n  imagebaseurl: \"../bg.jpg\",\n  name: \"Steve Choi\",\n  role: \"Full-stack Developer\",\n  linkedinId: \"stevechoi93\",\n  skypeid: \"Your skypeid\",\n  roleDescription: \"\",\n  socialLinks: [\n    {\n      name: \"linkedin\",\n      url: \"https://www.linkedin.com/in/stevechoi93/\",\n      className: \"fa fa-linkedin\"\n    },\n    {\n      name: \"github\",\n      url: \"http://github.com/stevechoiio\",\n      className: \"fa fa-github\"\n    },\n    {\n      name: \"email\",\n      url: \"mailto:stevechoi93@gmail.com\",\n      className: \"fa fa-envelope\"\n    }\n  ],\n  aboutme: \"I\",\n  address: \"Vancouver,BC\",\n  website: \"github.com/stevechoiio\",\n  education: [\n    {\n      UniversityName: \"University of British Columbia\",\n      UniversityURL: \"https://www.ubc.ca/\",\n      specialization: \"Major in Philosophy\",\n      MonthOfPassing: \"May\",\n      YearOfPassing: \"2017\",\n      Achievements: \"Bachelor of Arts\"\n    }\n  ],\n  work: [\n    {\n        CompanyName: \"Kater\",\n        specialization: \"Backend Software Engineer\",\n        MonthOfLeaving: \"Feb\",\n        YearOfLeaving: \"2020\",\n        Achievements: \"\",\n        url:\"https://www.kater.com/\"\n      },\n      {\n        CompanyName: \"Playr.GG\",\n        specialization: \"Mobile Application Developer\",\n        MonthOfLeaving: \"\",\n        YearOfLeaving: \"Oct 2019 - Current\",\n        Achievements: \"\",\n        url:\"https://playr.gg/\"\n      },\n    {\n      CompanyName: \"St.Andrew's Community Centre\",\n      specialization: \"Assistant Python Instructor\",\n      MonthOfLeaving: \"\",\n      YearOfLeaving: \"2018\",\n      Achievements: \"\",\n      url:\"http://standrewkim.com/main/frame.php\"\n    }\n  ],\n  skillsDescription: \"\",\n  skills: [\n    {\n      skillname: \"Node\"\n    },\n    {\n      skillname: \"React\"\n    },\n    {\n      skillname: \"Python\"\n    },\n    {\n      skillname: \"AWS\"\n    },\n    {\n      skillname: \"GraphQL\"\n    },\n    {\n      skillname: \"mongoDB\"\n    },\n    {\n      skillname: \"PostgreSQL\"\n    }\n  ],\n  portfolio: [\n    {\n      name: \"Cool IT!\",\n      description:\n        \"Mobile application designed for BC Sustainable Energy Association. I have implemented the backend of the app to allow users to login by authentication and log daily activites to track their habits.\",\n      imgurl: \"images/portfolio/coolitlogo.jpg\"\n    },\n    {\n      name: \"Loyal Flush\",\n      description:\n        \"It's the cleaniest washroom finder. This app has been built from scratch in a team of two developers. Beta currently available in App store! \",\n      imgurl: \"images/portfolio/loyalflush.jpg\"\n    },\n\n    {\n      name: \"FitGO\",\n      description:\n        \"Mobile application designed to let local personal trainers connect with their clients. I have built the data and the functions to let clients filter and view personal trainers on Google Map, and favourite their trainers!\",\n      imgurl: \"images/portfolio/fitgoLogo.jpg\"\n    }\n  ],\n  testimonials: [\n    {\n      description: \"This is a sample testimonial\",\n      name: \"Some technical guy\"\n    },\n    {\n      description: \"This is a sample testimonial\",\n      name: \"Some technical guy\"\n    }\n  ]\n};\n\nexport default resumeData;\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Resume from \"./components/Resume\";\nimport Portfolio from \"./components/Portfolio\";\nimport Footer from \"./components/Footer\";\nimport resumeData from \"./resumeData\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData} />\n        <Portfolio resumeData={resumeData} />\n        <Resume resumeData={resumeData} />\n        <Footer resumeData={resumeData} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}